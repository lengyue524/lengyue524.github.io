---
layout: post
title: 关于JAVA线程切换时上下文切换的个人想法
categories: [JAVA]
tags: [thread]
comments: true
description: 线程在程序中占有很重要的地位，线程之间的竞争切换到底做了什么却没有比较详细的说法，
下面我来说说我的想法。
---
线程让我们的程序能够同事运行多个异步任务和利用多核cpu，但是线程也不是越多越好。

过多的线程会导致频繁的线程切换，而在线程切换是需要耗费不少时间的，可能比你线程的执行时间还要长。所以我们使用线程池来控制程序中同时执行的线程个数。

那么线程切换为什么要耗费这么长的时间呢？这中间到底做了什么？

看过《深入JAVA虚拟机》中关于`JAVA内存模型和线程`一章我有了这样的一个认为。

书中提到线程有自己的工作内存，工作内存中的变量是主内存中的一份拷贝。那么恢复线程肯定要分配中作内存并拷贝需要的变量到工作内存中。这是上下文切换其中的一环。

那么在上一个线程挂起就肯定包含了挂起或删除线程并删除齐工作内存的工作了？

然后启动或恢复线程并建立工作内存的工作。

以上只是我的个人想法。欢迎有不同意见与我一起讨论。
